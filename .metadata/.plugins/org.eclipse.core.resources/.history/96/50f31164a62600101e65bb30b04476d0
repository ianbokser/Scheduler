package ui;

import model.*;
import service.AsignadorHorarios;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.util.List;

public class VentanaCronograma extends JFrame {
    private JTable tabla;

    public VentanaCronograma() {
        setTitle("Cronograma");
        setSize(800, 400);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLayout(new BorderLayout());

        // Obtener lista de trabajadores compartida
        List<Trabajador> trabajadores = AppData.getTrabajadores();

        // Calcular próximo lunes
        LocalDate hoy = LocalDate.now();
        LocalDate proximoLunes = hoy.with(DayOfWeek.MONDAY);
        if (hoy.getDayOfWeek().getValue() > DayOfWeek.MONDAY.getValue()) {
            proximoLunes = proximoLunes.plusWeeks(1);
        }

        Semana semana = new Semana(proximoLunes);
        AsignadorHorarios.asignarSemana(semana, trabajadores);

        // Crear tabla
        String[] columnas = {"Día", "Mañana 1", "Mañana 2", "Tarde 1", "Tarde 2"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        for (DiaTrabajo dia : semana.getDias()) {
            Object[] fila = new Object[5];
            fila[0] = dia.getFecha().getDayOfWeek() + " " + dia.getFecha();

            int i = 1;
            for (Turno turno : new Turno[]{Turno.MANIANA, Turno.MANIANA, Turno.TARDE, Turno.TARDE}) {
                Trabajador asignado = dia.getTrabajadorEnTurno(turno);
                fila[i++] = (asignado != null) ? asignado.getNombre() : "-";
            }
            modelo.addRow(fila);
        }

        tabla = new JTable(modelo);
        JScrollPane scrollPane = new JScrollPane(tabla);
        add(scrollPane, BorderLayout.CENTER);

        setVisible(true);
    }
}
