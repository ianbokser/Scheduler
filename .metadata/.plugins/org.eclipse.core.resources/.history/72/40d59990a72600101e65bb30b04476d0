package ui;

import model.*;
import service.AsignadorHorarios;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

public class VentanaCronograma extends JFrame {
    private JTable tabla;

    public VentanaCronograma() {
        setTitle("Cronograma");
        setSize(700, 400);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLayout(new BorderLayout());

        List<Trabajador> trabajadores = AppData.getTrabajadores();

        LocalDate hoy = LocalDate.now();
        LocalDate proximoLunes = hoy.with(DayOfWeek.MONDAY);
        if (hoy.getDayOfWeek().getValue() > DayOfWeek.MONDAY.getValue()) {
            proximoLunes = proximoLunes.plusWeeks(1);
        }

        Semana semana = new Semana(proximoLunes);
        AsignadorHorarios.asignarSemana(semana, trabajadores);

        String[] columnas = {"Día", "Mañana", "Tarde"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        for (DiaTrabajo dia : semana.getDias()) {
            String diaStr = dia.getFecha().getDayOfWeek() + " " + dia.getFecha();

            String manana = formatearTrabajadores(dia.getTrabajadoresEnTurno(Turno.MANIANA));
            String tarde = formatearTrabajadores(dia.getTrabajadoresEnTurno(Turno.TARDE));

            modelo.addRow(new Object[]{diaStr, manana, tarde});
        }

        tabla = new JTable(modelo);
        JScrollPane scrollPane = new JScrollPane(tabla);
        add(scrollPane, BorderLayout.CENTER);

        setVisible(true);
    }

    private String formatearTrabajadores(Set<Trabajador> trabajadores) {
        return trabajadores.stream()
                .map(Trabajador::getNombre)
                .collect(Collectors.joining(", "));
    }
}
